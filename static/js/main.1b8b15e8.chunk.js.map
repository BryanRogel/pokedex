{"version":3,"sources":["assets/images/loading.svg","assets/images/logo.png","functions/modal/Modal.js","components/modal/Modal.js","functions/setIdNumber/SetIdNumber.js","components/pokemonImage/PokemonImage.js","components/pokemonType/PokemonType.js","components/pokemonItem/PokemonItem.js","components/pokemonDetail/PokemonDetail.js","components/pokemonStats/PokemonStats.js","components/pokemonHability/PokemonHability.js","services/paths.js","store/actions/pokemonAction.js","components/card/Card.js","components/loading/Loading.js","pages/home/Home.js","functions/location/Location.js","components/header/Header.js","pages/about/About.js","App.js","serviceWorker.js","store/reducers/pokemonReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","useModal","initialVisible","useState","visible","updateVisible","showModal","hideModal","Modal","children","typeName","TransitionContainer","CSSTransition","in","timeout","unmountOnExit","classNames","state","ModalContainer","ModalView","className","styled","div","SetIdNumber","id","toString","length","PokemonImage","pokemonData","heightData","style","height","loading","src","alt","name","PokemonType","types","map","pokemonType","index","type","toLowerCase","key","toUpperCase","Style","connect","data","pokemonReducer","getDetails","isLoading","isSuccess","isError","showValue","setShowValue","useEffect","setTimeout","nameStat","statsData","stats","forEach","item","push","base_stat","stat","replace","l","series","options","chart","toolbar","show","xaxis","categories","labels","colors","fontSize","fontWeight","fontFamily","slice","descriptionData","oneDes","description","flavor_text_entries","language","flavor_text","oneDescription","value","calcWeight","weight","margin","PokemonDetail","document","onkeydown","e","window","event","keyCode","body","overflow","onClick","PokemonItem","PokemonStats","pokemonStats","PokemonHability","hability","pokemonAbilityData","abilities","pokemonAbility","is_hidden","ability","getDetail","process","getAllPokemonFail","payload","getMorePokemonFail","getPokemonDetailsFail","getAllData","response","dispatch","a","originalData","saveData","results","ids","itemData","url","Array","isArray","list","Set","axios","get","original","newData","result","console","log","mapDispatchToProps","status","message","Promise","resolve","getPokemonDetails","pokemonModalData","setPokemonModalData","pokemon","openModal","display","sprites","front_default","Loading","logo","Home","props","photos","page","start","getPokemon","this","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","prevProps","isSuccessGet","isSuccessGetMore","moreData","setState","count","next","previous","entities","morePokemon","isErrorGet","ref","Component","getAll","isLoadingGet","getMore","isLoadingGetMore","isErrorGetMore","getMorePokemon","Location","routeData","pageLocation","location","href","webLocation","origin","nav","Header","menuItems","htmlFor","to","route","About","class","App","defaults","baseURL","exact","path","component","Boolean","hostname","match","initState","PokemonReducer","action","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1b8b15e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.67d3cdb8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.084ef42c.png\";","import { useState } from \"react\";\r\n\r\nfunction useModal(initialVisible = false) {\r\n    const [visible, updateVisible] = useState(initialVisible);\r\n\r\n    function showModal() {\r\n        updateVisible(true);\r\n    }\r\n\r\n    function hideModal() {\r\n        updateVisible(false);\r\n    }\r\n\r\n    return { visible, showModal, hideModal };\r\n}\r\n\r\nexport default useModal;","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Modal = ({ visible, children, typeName }) => {\r\n  \r\n  return (\r\n    <TransitionContainer>\r\n      <CSSTransition\r\n        in={visible}\r\n        timeout={400}\r\n        unmountOnExit\r\n        classNames=\"modal\"\r\n      >\r\n        {state => (\r\n          <ModalContainer>\r\n            <ModalView className={`modal-view ${typeName}-type`}>{children}</ModalView>\r\n          </ModalContainer>\r\n        )}\r\n      </CSSTransition>\r\n    </TransitionContainer>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  backdrop-filter: blur(1px);\r\n  display: flex;\r\n  z-index: 6;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ModalView = styled.div`\r\n  width: 1000px;\r\n  height: 540px;\r\n  padding: 0 2rem;\r\n  transition: all 300ms ease-out;\r\n  border-radius: 40px;\r\n  border: solid 3px #000;\r\n  overflow-y: auto;\r\n    ::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n@media (max-width: 550px) {\r\n  border-radius: 0px;\r\n  height: 100%;\r\n} \r\n`;\r\n\r\nconst TransitionContainer = styled.div`\r\n  .modal-enter {\r\n    opacity: 0.01;\r\n\r\n    .modal-view {\r\n      transform: scale(0.9) translateY(20%);\r\n    }\r\n  }\r\n  .modal-enter-active {\r\n    opacity: 1;\r\n    transition: all 300ms ease-out;\r\n\r\n    .modal-view {\r\n      transform: scale(1) translateY(0%);\r\n    }\r\n  }\r\n  .modal-exit {\r\n    opacity: 1;\r\n\r\n    .modal-view {\r\n      transform: scale(1) translateY(0%);\r\n    }\r\n  }\r\n  .modal-exit-active {\r\n    opacity: 0.01;\r\n    transition: all 300ms ease-out;\r\n\r\n    .modal-view {\r\n      transform: scale(0.9) translateY(20%);\r\n    }\r\n  }\r\n  `;\r\n\r\n// const ModalContainer = styled.div`\r\n//   height: 100%;\r\n//   position: fixed;\r\n//   top: 0;\r\n//   left: 0;\r\n//   right: 0;\r\n//   bottom: 0;\r\n//   backdrop-filter: blur(2px);\r\n//   display: flex;\r\n//   z-index: 6;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n// `;\r\n\r\n// const ModalView = styled.div`\r\n//   background-color: black; /* Color default */\r\n//   width: 60%;\r\n//   height: 60%;\r\n//   overflow: auto;\r\n//   transition: all 300ms ease-out;\r\n// `;\r\n\r\n// const TransitionContainer = styled.div`\r\n//   .modal-enter {\r\n//     opacity: 0.01;\r\n\r\n//     .modal-view {\r\n//       transform: scale(50.0) translateY(0%);\r\n//     }\r\n//   }\r\n//   .modal-enter-active {\r\n//     opacity: 1;\r\n//     transition: all 300ms ease-out;\r\n\r\n//     .modal-view {\r\n//       transform: scale(1) translateY(0%);\r\n//     }\r\n//   }\r\n//   .modal-exit {\r\n//     opacity: 1;\r\n\r\n//     .modal-view {\r\n//       transform: scale(1) translateY(20%);\r\n//     }\r\n//   }\r\n//   .modal-exit-active {\r\n//     opacity: 0.01;\r\n//     transition: all 300ms ease-out;\r\n\r\n//     .modal-view {\r\n//       transform: scale(0.9) translateY(0%);\r\n//     }\r\n//   }\r\n// `;\r\n\r\n","function SetIdNumber(id) {\r\n    switch (id.toString().length) {\r\n        case 1:\r\n            return \"00\" + id;\r\n        case 2:\r\n            return \"0\" + id;\r\n        case 3:\r\n            return id;\r\n            default:\r\n            return id;\r\n    }\r\n}\r\n\r\nexport default SetIdNumber;","import React from 'react';\r\nimport SetIdNumber from '../../functions/setIdNumber/SetIdNumber';\r\n\r\nfunction PokemonImage({ pokemonData, heightData }){\r\n    return(\r\n        <img style={{ height: heightData }} loading=\"lazy\"\r\n            src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${ SetIdNumber(pokemonData.id) }.png`}\r\n            alt={pokemonData.name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PokemonImage;","import React from 'react';\r\n\r\nfunction PokemonType({ pokemonData }){\r\n    return(\r\n        <div>\r\n            { pokemonData && pokemonData.types.map((pokemonType, index) => ( //Mapping the tipe of the pokemon\r\n                <h3\r\n                    className={`card-type card-${ pokemonType.type.name.toLowerCase()}-type`}\r\n                    key={index}\r\n                    id={index}\r\n                >\r\n                    {pokemonType.type.name.toUpperCase()}\r\n                </h3>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonType;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PokemonImage from '../pokemonImage/PokemonImage';\r\nimport PokemonType from '../pokemonType/PokemonType';\r\n\r\nfunction PokemonDetail ({ pokemonData, data }) {\r\n\r\n  const [ showValue, setShowValue ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(function() {\r\n      setShowValue(true);\r\n  }, 125);\r\n  }, []);\r\n\r\n  const nameStat = [];\r\n\r\n  const statsData = [];\r\n\r\n  pokemonData && pokemonData.stats && pokemonData.stats.forEach((item) => {\r\n    statsData.push(item.base_stat)\r\n    nameStat.push(item.stat.name === \"hp\"\r\n    ? item.stat.name.toUpperCase()\r\n    : item.stat.name.replace(/\\b\\w/g, l => l.toUpperCase()).replace(\"-\", \" \"))\r\n  })\r\n\r\n  const series = [{\r\n    name: 'Stats',\r\n    data: statsData,\r\n  }]\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      type: 'radar',\r\n    },\r\n    xaxis: {\r\n      categories: nameStat,\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          colors: \"#000000\",\r\n          fontSize: \"11px\",\r\n          fontWeight: 'bold',\r\n          fontFamily: 'Arial'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const oneDescription = (descriptionData) => {\r\n    let oneDes = true;\r\n    let description = '';\r\n    descriptionData && descriptionData.flavor_text_entries && descriptionData.flavor_text_entries.length > 0\r\n    && descriptionData.flavor_text_entries.forEach(item => {\r\n      while (item.language.name === \"en\" && oneDes){\r\n        oneDes = false;\r\n        return (description = item.flavor_text.replace(/\\n/g, \" \").replace(/\\f/g, \" \"))\r\n      }\r\n    })\r\n    return description;\r\n  }\r\n\r\n  const calcWeight = (value) => {\r\n    return (value/10);\r\n  }\r\n\r\n  const calcHeight = (value) => {\r\n    return (value*10);\r\n  }\r\n\r\n  return(\r\n    <Style>\r\n      {showValue &&\r\n        <div className=\"center\">\r\n          <section className=\"pokemon-image\">\r\n            <PokemonImage pokemonData={pokemonData} heightData=\"250px\" />\r\n          </section>\r\n          <div className=\"pokemon-data\">\r\n            <h1 className=\"card-name\">{pokemonData.name[0].toUpperCase() + pokemonData.name.slice(1)}</h1>\r\n            <div className=\"pokemon-type\">\r\n              <PokemonType pokemonData={pokemonData} />\r\n            </div>\r\n            <section>\r\n              <title>Description:</title>\r\n              <div className=\"description\">{ oneDescription(data) }</div>\r\n              <div className=\"info\">\r\n                <div className=\"info-data\">\r\n                  <title> Height: </title>\r\n                  <div>{calcHeight(pokemonData.height && pokemonData.height)} cm</div>\r\n                </div>\r\n                <h4 className=\"info-data\">\r\n                  <title> Weight: </title>\r\n                  <div>{calcWeight(pokemonData.weight && pokemonData.weight)} kg</div>\r\n                </h4>\r\n              </div>\r\n              <title>Stats:</title>\r\n                <ReactApexChart options={options} series={series} type=\"radar\" height={250} style={{ margin: '-30px 0' }}/>\r\n            </section>\r\n          </div>\r\n        </div> \r\n      }\r\n    </Style> \r\n  );\r\n}\r\n\r\nconst Style = styled.div`\r\nmin-height: 485px;\r\ntitle {\r\n  display: block;\r\n  font-weight: 700;\r\n  font-size: 22px;\r\n}\r\n.pokemon-image{\r\n  width: auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.pokemon-data{\r\n  width: 75%;\r\n}\r\n.description {\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n.more-data{\r\n  margin-top: 20px;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n}\r\n.info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.info-data {\r\n  margin: 1em 0 0 1em;\r\n  flex: 1 0;\r\n    div {\r\n    font-size: 14px;\r\n  }\r\n}\r\n.pokemon-type{\r\n  display: inline-block;\r\n  margin-top: 40px;\r\n}\r\n.card-type{\r\n  margin: -10px 10px !important;\r\n}\r\n.center {\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n}\r\n@media (max-width: 575px){\r\n  .card-type {\r\n    margin: 0px 3px !important;\r\n  }\r\n}\r\n@media (max-width: 550px) {\r\n  .center {\r\n    display: block; \r\n  }\r\n  .pokemon-image, .pokemon-data {\r\n    display: contents;\r\n  }\r\n}\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.pokemonReducer.getDetails.data,\r\n  isLoading: state.pokemonReducer.getDetails.isLoading,\r\n  isSuccess: state.pokemonReducer.getDetails.isSuccess,\r\n  isError: state.pokemonReducer.getDetails.isError,\r\n})\r\n\r\n\r\nexport default connect( mapStateToProps, null )(PokemonDetail);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Modal from '../modal/Modal.js';\r\nimport PokemonItem from '../pokemonItem/PokemonItem';\r\n\r\nconst PokemonDetail = ({ visible, hideModal, pokemonData }) => {\r\n\r\n  document.onkeydown = function(e) {\r\n    e = e || window.event;\r\n    let isEscape = false;\r\n    if (\"key\" in e) {\r\n        isEscape = (e.key === \"Escape\" || e.key === \"Esc\");\r\n    } else {\r\n        isEscape = (e.keyCode === 27);\r\n    }\r\n    if (isEscape) {\r\n      hideModal();\r\n    }\r\n};\r\n\r\n  visible ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'auto'\r\n  return (\r\n    <Style>\r\n      <Modal visible={visible} typeName={pokemonData && pokemonData.types[0].type.name}>\r\n        <div className='grid-container'>\r\n          <div className=\"buttonGrid\">\r\n            <div className=\"button\" onClick={() => hideModal()}>Close</div>\r\n          </div>\r\n          <div className=\"contendGrid\">\r\n            <PokemonItem className=\"button\" pokemonData={pokemonData} />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Style>\r\n  );\r\n};\r\n\r\nconst Style = styled.div`\r\n.buttonGrid{ grid-area: button; }\r\n.contendGrid { \r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-area: content;\r\n}\r\n\r\n.grid-container {\r\n  display: grid;\r\n  grid-template-areas:\r\n    'button '\r\n    'content';\r\n}\r\n.button {\r\n  cursor: pointer;\r\n  height: 32px;\r\n  width: 120px;\r\n  border-radius: 12px;\r\n  float: right;\r\n  margin-top: 20px;\r\n  padding-top: 4px;\r\n  letter-spacing: 2px;\r\n  font-family: 'Open Sans', sans-serif;\r\n  font-weight: bold;\r\n  color: #000;\r\n  &:hover{\r\n    color: #fff;\r\n  }\r\n}\r\n`;\r\n\r\nexport default PokemonDetail;\r\n","import React from 'react';\r\n\r\nfunction PokemonStats({ pokemonData }){\r\n    return(\r\n        <tbody>\r\n            { pokemonData && pokemonData.stats.map((pokemonStats, index) => ( //Mapping the stats of the pokemon\r\n                <tr key={index} id={index}>\r\n                    <th>\r\n                        {\r\n                            pokemonStats.stat.name === \"hp\" ?\r\n                            pokemonStats.stat.name.toUpperCase() :\r\n                            pokemonStats.stat.name.replace(/\\b\\w/g, l => l.toUpperCase()).replace(\"-\", \" \") \r\n                        }\r\n                    </th>\r\n                    <td>{ pokemonStats.base_stat }</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default PokemonStats;","import React from 'react';\r\n\r\nfunction PokemonHability({ pokemonData, hability }){\r\n\r\n    let pokemonAbilityData = 0; // Count the abilities of the pokemon for select the first ability because need show a ability unique\r\n\r\n    const setAbility = () => {\r\n        pokemonAbilityData++; // Add to accountant\r\n    }\r\n\r\n    return(\r\n        <div className=\"card-abilities\">\r\n            { pokemonData && pokemonData.abilities.map((pokemonAbility, index) => ( //Mapping the abilities of the pokemon\r\n                ((pokemonAbilityData===0 && !pokemonAbility.is_hidden) || pokemonAbility.is_hidden) &&\r\n                <h4 className=\"card-ability\" key={index} id={index}>\r\n                    <span className=\"card-label\"> { pokemonAbility.is_hidden ? \"Hidden Ability\" : \"Ability\" } </span>\r\n                    <div>{ pokemonAbility.ability.name.replace(/\\b\\w/g, l => l.toUpperCase()).replace(\"-\", \" \")  }</div>\r\n                    {hability && pokemonAbility.is_hidden ===false && setAbility()}\r\n                </h4>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonHability;","const getAll = process.env.REACT_APP_BASE_CONTEXT;\r\n\r\nconst getDetails = process.env.REACT_APP_SPECIE_CONTEXT;\r\n\r\nexport const getPokemon = () => `${getAll}?limit=8`;\r\n\r\nexport const getDetail = (name) => `${getDetails}/${name}`;\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nimport { getPokemon, getDetail } from \"services/paths\";\r\n\r\nexport const GET_ALL_POKEMON_LOADING = \"GET_ALL_POKEMON_LOADING\";\r\nexport const GET_ALL_POKEMON_SUCCESS = \"GET_ALL_POKEMON_SUCCESS\";\r\nexport const GET_ALL_POKEMON_FAIL = \"GET_ALL_POKEMON_FAIL\";\r\n\r\nexport const GET_MORE_POKEMON_LOADING = \"GET_MORE_POKEMON_LOADING\";\r\nexport const GET_MORE_POKEMON_SUCCESS = \"GET_MORE_POKEMON_SUCCESS\";\r\nexport const GET_MORE_POKEMON_FAIL = \"GET_MORE_POKEMON_FAIL\";\r\n\r\nexport const GET_POKEMON_DETAILS_LOADING = 'GET_POKEMON_DETAILS_LOADING';\r\nexport const GET_POKEMON_DETAILS_SUCCESS = 'GET_POKEMON_DETAILS_SUCCESS';\r\nexport const GET_POKEMON_DETAILS_FAIL = 'GET_POKEMON_DETAILS_FAIL';\r\n\r\nconst getAllPokemonLoading = () => ({ type: GET_ALL_POKEMON_LOADING });\r\nconst getAllPokemonSuccess = (payload) => ({ type: GET_ALL_POKEMON_SUCCESS, payload });\r\nconst getAllPokemonFail = (payload) => ({ type: GET_ALL_POKEMON_FAIL, payload });\r\n\r\nconst getMorePokemonLoading = () => ({ type: GET_MORE_POKEMON_LOADING });\r\nconst getMorePokemonSuccess = (payload) => ({ type: GET_MORE_POKEMON_SUCCESS, payload });\r\nconst getMorePokemonFail = (payload) => ({ type: GET_MORE_POKEMON_FAIL, payload });\r\n\r\nconst getPokemonDetailsLoading = () => ({ type: GET_POKEMON_DETAILS_LOADING });\r\nconst getPokemonDetailsSuccess = (payload) => ({ type: GET_POKEMON_DETAILS_SUCCESS, payload });\r\nconst getPokemonDetailsFail = (payload) => ({ type: GET_POKEMON_DETAILS_FAIL, payload });\r\n\r\nconst getAllData = (response) => async (dispatch) => {\r\n  try {\r\n    if(response){\r\n      const originalData = response.data;\r\n      const saveData = response.data.results;\r\n      let data = [];\r\n      const ids = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.length > 0 &&\r\n        response.data.results.forEach((itemData) => {\r\n          ids.push(itemData.url);\r\n        });\r\n      \r\n      if (Array.isArray(ids)) {\r\n        const list = new Set(ids);\r\n        for (const id of [...list]) {\r\n          response = await axios.get(id);\r\n          data.push(response.data);\r\n        }\r\n      }\r\n      const original = [];\r\n      data &&\r\n        data.length > 0 &&\r\n        data.forEach((itemData, index) => {\r\n          original.push({ ...saveData[index], ...itemData });\r\n        });\r\n      const newData = {\r\n        result: {\r\n            ...originalData,\r\n            results: original,\r\n        }\r\n      };\r\n      return newData;\r\n    }\r\n  } catch(error){\r\n    console.log('error in getAllData', error);\r\n  }\r\n}\r\n\r\nconst getAllPokemon = () => async (dispatch) => {\r\n  dispatch(getAllPokemonLoading());\r\n  try {\r\n    let response = await axios.get(getPokemon());\r\n    let data = [];\r\n    if (response.status === 200) {\r\n      const newData = await dispatch(getAllData(response));\r\n      await dispatch(getAllPokemonSuccess(newData));\r\n    } else {\r\n      data = {\r\n        status: null,\r\n        message: \"Error\",\r\n        result: [],\r\n      };\r\n      dispatch(getAllPokemonFail(data));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error actionAction getAllPokemon\", error ? error : error);\r\n    const data = {\r\n      status: null,\r\n      message: \"Error\",\r\n      result: [],\r\n    };\r\n    dispatch(getAllPokemonFail(data));\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nconst getMorePokemon = (morePokemon) => async (dispatch) => {\r\n  dispatch(getMorePokemonLoading());\r\n  try {\r\n    let response = await axios.get(morePokemon);\r\n    let data = [];\r\n\r\n    if (response.status === 200) {\r\n      const newData = await dispatch(getAllData(response));\r\n      await dispatch(getMorePokemonSuccess(newData));\r\n    } else {\r\n      data = {\r\n        status: null,\r\n        message: \"Error\",\r\n        result: [],\r\n      };\r\n      dispatch(getMorePokemonFail(data));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error actionAction getAllPokemon\", error ? error : error);\r\n    const data = {\r\n      status: null,\r\n      message: \"Error\",\r\n      result: [],\r\n    };\r\n    dispatch(getMorePokemonFail(data));\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nconst getPokemonDetails = (name) => async (dispatch) => {\r\n  dispatch(getPokemonDetailsLoading());\r\n  try {\r\n    let response = await axios.get(getDetail(name));\r\n    let data = [];\r\n    if (response.status === 200) {\r\n      data = {\r\n        result: {\r\n          ...response.data\r\n        }\r\n      };\r\n      await dispatch(getPokemonDetailsSuccess(data));\r\n    } else {\r\n      data = {\r\n        status: null,\r\n        message: \"Error\",\r\n        result: [],\r\n      };\r\n      dispatch(getPokemonDetailsFail(data));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error actionAction getAllPokemon\", error ? error : error);\r\n    const data = {\r\n      status: null,\r\n      message: \"Error\",\r\n      result: [],\r\n    };\r\n    dispatch(getPokemonDetailsFail(data));\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nexport {\r\n  getAllPokemon,\r\n  getMorePokemon,\r\n  getPokemonDetails\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport useModal from \"../../functions/modal/Modal.js\";\r\nimport PokemonDetail from '../pokemonDetail/PokemonDetail';\r\nimport PokemonImage from '../pokemonImage/PokemonImage';\r\nimport PokemonType from '../pokemonType/PokemonType';\r\nimport PokemonStats from '../pokemonStats/PokemonStats';\r\nimport PokemonHability from '../pokemonHability/PokemonHability';\r\nimport { getPokemonDetails } from '../../store/actions/pokemonAction';\r\n\r\n\r\n\r\nconst Card = ({ pokemonData, getDetails }) => {\r\n    const { showModal, hideModal, visible } = useModal();\r\n    const [ pokemonModalData, setPokemonModalData ] = useState(null);\r\n\r\n    const openModal = (pokemon) => {\r\n        setPokemonModalData(pokemon)\r\n        showModal();\r\n        pokemon && pokemon.name && getDetails(pokemon.name);\r\n    }\r\n\r\n    return (\r\n        <Style>\r\n        {/* Pokemon Modal */}\r\n            <PokemonDetail pokemonData={pokemonModalData} visible={visible} hideModal={hideModal} />\r\n                {/* Cards map */}\r\n                {pokemonData && pokemonData.results.map((pokemon, index) => (\r\n                <figure\r\n                    onClick={() => openModal(pokemon)}\r\n                    key={index}\r\n                    id={index}\r\n                    style={{ display: !pokemon.sprites.front_default && 'none' }}\r\n                    className={`card ${ pokemon.types[0].type.name }-type`}\r\n                >\r\n                    <div className=\"card-image-container\">\r\n                        <PokemonImage pokemonData={pokemon} heightData=\"150px\"/>\r\n                    </div>\r\n                    <figcaption className=\"card-caption\">\r\n                        {/* Mapping the types of the pokemon */}\r\n                        <PokemonType pokemonData={pokemon} />\r\n                        <h1 className=\"card-name\">{pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}</h1>\r\n                        <table className=\"card-stats\">\r\n                            <PokemonStats pokemonData={pokemon} />\r\n                        </table>\r\n                        <PokemonHability pokemonData={pokemon} hability={true} />\r\n                    </figcaption>\r\n                </figure>\r\n            ))}\r\n        </Style>\r\n    )\r\n}\r\n\r\nconst Style = styled.div`\r\nmax-width: 1366px;\r\ntext-align: center;\r\ndisplay: inline-block;\r\nbody {\r\n    text-align: center;\r\n    margin: 20px;\r\n}\r\n.card-image {\r\n    max-height: 150px;\r\n    margin: auto;\r\n    display: inline-block;\r\n}\r\n.card-image[src=\"\"] {\r\n    figure {\r\n        display: none;\r\n    }\r\n}\r\nh1, h2, h3, h4, h5 {\r\n    margin: 0;\r\n    font-weight: 400;\r\n}\r\n.card {\r\n    font-family: 'Open Sans', sans-serif;\r\n    border: 3px solid black;\r\n    display: inline-block;\r\n    width: 300px;\r\n    border-radius: 15px;\r\n    margin: 10px;\r\n    background: #ddd;\r\n    text-align: left;\r\n    box-shadow: 0px 5px 20px -10px #111111;\r\n    position: relative;\r\n    transition: 0.4s;\r\n}\r\n.card-caption {\r\n    border-top: 2px solid black;\r\n    background-color: ghostwhite;\r\n    padding: 1em;\r\n    position: relative;\r\n    border-radius: 0px 0px 12px 12px;\r\n}\r\n.card-image-container {\r\n    text-align: center;\r\n    padding: 1em 1em 0;\r\n}\r\n.card-type {\r\n    border: 2px solid black;\r\n    float: right;\r\n    margin: -0.95em 0px 0px 7px;\r\n    top: 0;\r\n    right: 1em;\r\n    transform: translateY(-50%);\r\n    color: #ffffff;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.1em;\r\n    padding: 0.15em 0.35em;\r\n    line-height: 1;\r\n    border-radius: 21px;\r\n    background: #bbbbbb;\r\n}\r\n.card-label {\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    display: block;\r\n    margin-bottom: 3px;\r\n}\r\n.card-name {\r\n    margin-top: 14px;\r\n    text-align: center;\r\n    font-size: 1.5em;\r\n    font-weight: 700;\r\n    letter-spacing: 0.02em;\r\n}\r\n.card-stats {\r\n    margin: 1em 0;\r\n    width: 100%;\r\n}\r\n.card-stats th {\r\n    font-weight: 200;\r\n}\r\n.card-stats th, .card-stats td {\r\n    width: 65%;\r\n    padding: 0.25em 0.5em 0;\r\n}\r\n.card-abilities {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.card-ability {\r\n    margin: 1em 0 0 1em;\r\n    flex: 1 0;\r\n    div {\r\n        font-size: 8px;\r\n    }\r\n}\r\n.card:hover {\r\n    z-index: 5;\r\n    box-shadow: 0px 13px 30px -15px #000000;\r\n    transform: translateY(-10px);\r\n    cursor: pointer;\r\n}\r\n\r\n/* // Colors for cards and types of pokemon */\r\n.normal-type {\r\n    background: linear-gradient(110deg, #A8A878 0%, #5c5c3e 100%);\r\n    box-shadow: 0px 5px 20px -10px #3A1C71;\r\n}\r\n.card-normal-type {\r\n    background-color: #A8A878;\r\n}\r\n.water-type {\r\n    background: linear-gradient(120deg, #1CB5E0 0%, #000851 100%);\r\n    box-shadow: 0px 5px 20px -10px #000851;\r\n}\r\n.card-water-type {\r\n    background-color: #6890F0;\r\n}\r\n.electric-type {\r\n    background: linear-gradient(90deg, #e8ff99 34%, #ffde00 83%);\r\n}\r\n.card-electric-type {\r\n    background-color: #F8D030;\r\n}\r\n.fire-type {\r\n    background: linear-gradient(0deg, #c71800 10%, #fcc245 100%);\r\n}\r\n.card-fire-type {\r\n    background-color: #F08030;\r\n}\r\n.fighting-type {\r\n    background: linear-gradient(120deg, #c03028 0%, #aa362f 56%, #580808 100% );\r\n}\r\n.card-fighting-type {\r\n    background-color: #C03028;\r\n}\r\n.flying-type {\r\n    background: linear-gradient(120deg, #a890f0 0%, #8367d6 48%, #351a87 95%);\r\n}\r\n.card-flying-type {\r\n    background-color: #A890F0;\r\n}\r\n.poison-type {\r\n    background: linear-gradient(120deg, #a040a0 0%, #8a298a 48%, #6b0a6b 95%);\r\n}\r\n.card-poison-type {\r\n    background-color: #A040A0;\r\n}\r\n.ground-type {\r\n    background: linear-gradient(120deg, #e0c068 0%, #83681c 95%);\r\n}\r\n.card-ground-type {\r\n    background-color: #E0C068;\r\n}\r\n.rock-type {\r\n    background: linear-gradient(120deg, #B8A038 0%, #5e4f0e 95%);\r\n}\r\n.card-rock-type {\r\n    background-color: #B8A038;\r\n}\r\n.bug-type {\r\n    background: linear-gradient(120deg, #A8B820 0%, #5d6706 95%);\r\n}\r\n.card-bug-type {\r\n    background-color: #A8B820;\r\n}\r\n.ghost-type {\r\n    background: linear-gradient(120deg, #705898 0%, #1c0541 95%);\r\n}\r\n.card-ghost-type {\r\n    background-color: #705898;\r\n}\r\n.dragon-type {\r\n    background: linear-gradient(120deg, #7038F8 0%, #2a0f6c 95%);\r\n}\r\n.card-dragon-type {\r\n    background-color: #7038F8;\r\n}\r\n.steel-type {\r\n    background: linear-gradient(120deg, #B8B8D0 0%, #424261 95%);\r\n}\r\n.card-steel-type {\r\n    background-color: #B8B8D0;\r\n}\r\n.psychic-type {\r\n    background: linear-gradient(140deg, #ffa7f9 0%, #ff2cc3 39%, #ffe3a7 100%);\r\n}\r\n.card-psychic-type {\r\n    background: #F85888;\r\n}\r\n.dark-type {\r\n    background: linear-gradient(20deg, #191919 0%, #100b32 33%, #5c0249 100%);\r\n}\r\n.card-dark-type {\r\n    background: #705848;\r\n}\r\n.grass-type {\r\n    background: linear-gradient(140deg, #78C850 0%, #509c2b 69%, #2a6c09 100%);\r\n}\r\n.card-grass-type {\r\n    background: #4E8234;\r\n}\r\n.ice-type {\r\n    background: linear-gradient(230deg, #caeaf6 0%, #a0eaf1 46%, #6fb8eb 100%);\r\n}\r\n.card-ice-type {\r\n    background: #98D8D8;\r\n}\r\n.fairy-type {\r\n    background: linear-gradient(45deg, #ffe6f0 0%, #ffc5e0 34%, #ffa6b9 71%, #ff8a95 100%);\r\n}\r\n.card-fairy-type {\r\n    background: #EE99AC;\r\n}\r\n`\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getDetails: (name) => dispatch(getPokemonDetails(name))\r\n})\r\n\r\nexport default connect( mapDispatchToProps, mapDispatchToProps )(Card);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from './../../assets/images/loading.svg';\r\n\r\nfunction Loading ({height}) {\r\n    return(\r\n        <Style>\r\n            <img src={logo} style={{ height: `${height ? height : '40px' }`, margin: '10px' }} className=\"loading\" alt=\"loading\"/>\r\n        </Style>\r\n    );\r\n}\r\n\r\nconst Style = styled.div`\r\nbackground: white;\r\nwidth: 100%;\r\nheight: (100vh);\r\n\r\n    @keyframes rotate360 {\r\n        to { transform: rotate(360deg); }\r\n    }\r\n    .loading { animation: 2s rotate360 infinite linear; }\r\n`;\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Card from 'components/card/Card';\r\nimport Loading from 'components/loading/Loading';\r\nimport {\r\n    getAllPokemon,\r\n    getMorePokemon,\r\n} from 'store/actions/pokemonAction';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        pokemonData: [],\r\n        photos: [],\r\n        page: 0,\r\n        start: false\r\n        }\r\n        props.getPokemon();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var options = {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 1.0\r\n        };\r\n        \r\n        this.observer = new IntersectionObserver(\r\n        this.handleObserver.bind(this),\r\n        options\r\n        );\r\n        this.observer.observe(this.loadingRef);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        const { pokemonData, page } = this.state;\r\n        const {\r\n            isSuccessGet,\r\n            isSuccessGetMore,\r\n            data,\r\n            moreData,\r\n        } = this.props;\r\n\r\n        if (isSuccessGet !== prevProps.isSuccessGet && isSuccessGet) {\r\n            this.setState({ pokemonData: data, page: page + 1 })\r\n        }\r\n        if (isSuccessGetMore !== prevProps.isSuccessGetMore && isSuccessGetMore) {\r\n            for (const result of [...moreData.results]) {\r\n                pokemonData.results.push( result )\r\n            }\r\n            this.setState({ \r\n                pokemonData: {\r\n                    'count': pokemonData.count,\r\n                    'next': moreData.next,\r\n                    'previous': moreData.previous,\r\n                    'results': pokemonData.results,\r\n                }, \r\n                start: false\r\n            })\r\n        }\r\n    }\r\n\r\n    handleObserver(entities, observer) {\r\n        const { pokemonData, page, start } = this.state;\r\n        const { morePokemon } = this.props;\r\n        if (!start && this.state.pokemonData.next && this.state.pokemonData.next) {\r\n            this.setState({ page: page + 1, start: true });\r\n            page > 0 && morePokemon(pokemonData.next && pokemonData.next);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            data,\r\n            isSuccessGet,\r\n            isErrorGet,\r\n        } = this.props;\r\n\r\n        const { start } = this.state;\r\n\r\n        return(\r\n            <Style>\r\n                { isSuccessGet && !isErrorGet \r\n                ? \r\n                <div>\r\n                    <Card pokemonData={data} />\r\n                </div>\r\n                :\r\n                <div className=\"load\" >\r\n                    <Loading height=\"140px\" />\r\n                </div>\r\n                }\r\n                <div ref={loadingRef => (this.loadingRef = loadingRef)} >\r\n                    { start &&\r\n                        <Loading height=\"40px\" />\r\n                    } \r\n                </div>\r\n            </Style>\r\n        )\r\n    }\r\n}\r\n\r\nconst Style = styled.div`\r\n    width:100%;\r\n    text-align: center;\r\n\r\n    .load {\r\n        min-height: calc(100vh);\r\n        background: white;\r\n        z-index: 100;\r\n        justify-content: center;\r\n        align-items: center;\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.pokemonReducer.getAll.data,\r\n    isLoadingGet: state.pokemonReducer.getAll.isLoading,\r\n    isSuccessGet: state.pokemonReducer.getAll.isSuccess,\r\n    isErrorGet: state.pokemonReducer.getAll.isError,\r\n\r\n    moreData: state.pokemonReducer.getMore.data,\r\n    isLoadingGetMore: state.pokemonReducer.getMore.isLoading,\r\n    isSuccessGetMore: state.pokemonReducer.getMore.isSuccess,\r\n    isErrorGetMore: state.pokemonReducer.getMore.isError,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getPokemon: () => dispatch(getAllPokemon()),\r\n    morePokemon: (url) => dispatch(getMorePokemon(url))\r\n})\r\n\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(Home);","function Location(routeData) {\r\n    // Absolut URL\r\n    const pageLocation = window.location.href;\r\n    // only the origin location\r\n    const webLocation = window.location.origin;\r\n\r\n    const resultData = pageLocation.replace(webLocation, '') === routeData;\r\n\r\n    return resultData;\r\n}\r\n\r\nexport default Location;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Location from '../../functions/location/Location';\r\nimport logo from './../../assets/images/logo.png';\r\n\r\nfunction Header() {\r\n\r\n  const menuItems =[\r\n    {\r\n      'name':'Home', \r\n      'route': '/pokedex'\r\n    },\r\n    {\r\n      'name':'About', \r\n      'route': '/pokedex/about'\r\n    }\r\n  ];\r\n\r\n  return(\r\n    <Style>\r\n      <nav className=\"header\">\r\n        <div className=\"max-size\">\r\n          <img src={logo} className=\"logo\" alt=\"logo\" style={{ height: '50px' }} />\r\n          <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n            <label className=\"menu-icon\" htmlFor=\"menu-btn\"><span className=\"navicon\"></span></label>\r\n            <ul className=\"menu\">\r\n              {menuItems && menuItems.map((item, index)=>(\r\n                <Link key={index} id={index} to={item.route}>\r\n                  <li className={`${ Location(item.route) && 'active' }`}>\r\n                    {item.name}\r\n                  </li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n      </nav>\r\n    </Style>\r\n  )\r\n} \r\n\r\nconst Style = styled.nav`\r\nfont-family: 'Open Sans', sans-serif;\r\n.header {\r\n  background-color: #fff;\r\n  box-shadow: 0px 0px 4px 0 rgba(0,0,0,.1);\r\n  display: inline-block;\r\n  width: 100%;\r\n  z-index: 300;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.max-size {\r\n  margin: auto;\r\n  max-width: 1366px;\r\n}\r\n\r\n.active {\r\n  color: #979797 !important;\r\n}\r\n\r\n.header ul {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n}\r\n\r\nul {\r\n  margin: 10px 0px;\r\n  position: relative;\r\n}\r\nul li {\r\n  display: inline;\r\n  list-style: none;\r\n  padding: 20px 20px 22px;\r\n}\r\n\r\n.header li a {\r\n  display: block;\r\n  padding: 20px 20px;\r\n  border-right: 1px solid #f4f4f4;\r\n  text-decoration: none;\r\n}\r\n\r\n.header li a:hover,\r\n.header .menu-btn:hover {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.header .logo {\r\n  display: block;\r\n  float: left;\r\n  font-size: 2em;\r\n  padding: 10px 20px;\r\n  text-decoration: none;\r\n}\r\n\r\n/* menu */\r\n\r\n.header .menu {\r\n  clear: both;\r\n  max-height: 0;\r\n  transition: max-height .2s ease-out;\r\n}\r\n\r\n/* menu icon */\r\n\r\n.header .menu-icon {\r\n  cursor: pointer;\r\n  float: right;\r\n  padding: 28px 20px;\r\n  position: relative;\r\n  user-select: none;\r\n}\r\n\r\n.header .menu-icon .navicon {\r\n  background: #333;\r\n  display: block;\r\n  height: 2px;\r\n  position: relative;\r\n  transition: background .2s ease-out;\r\n  width: 18px;\r\n}\r\n\r\n.header .menu-icon .navicon:before,\r\n.header .menu-icon .navicon:after {\r\n  background: #333;\r\n  content: '';\r\n  display: block;\r\n  height: 100%;\r\n  position: absolute;\r\n  transition: all .2s ease-out;\r\n  width: 100%;\r\n}\r\n\r\n.header .menu-icon .navicon:before {\r\n  top: 5px;\r\n}\r\n\r\n.header .menu-icon .navicon:after {\r\n  top: -5px;\r\n}\r\n\r\n/* menu button */\r\n\r\n.header .menu-btn {\r\n  display: none;\r\n}\r\n\r\n.header .menu-btn:checked ~ .menu {\r\n  max-height: 240px;\r\n}\r\n\r\n.header .menu-btn:checked ~ .menu-icon .navicon {\r\n  background: transparent;\r\n}\r\n\r\n.header .menu-btn:checked ~ .menu-icon .navicon:before {\r\n  transform: rotate(-45deg);\r\n}\r\n\r\n.header .menu-btn:checked ~ .menu-icon .navicon:after {\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.header .menu-btn:checked ~ .menu-icon:not(.steps) .navicon:before,\r\n.header .menu-btn:checked ~ .menu-icon:not(.steps) .navicon:after {\r\n  top: 0;\r\n}\r\n\r\n\r\n@media (min-width: 500px) {\r\n  .header li {\r\n    float: left;\r\n  }\r\n  .header li {\r\n    padding: 24px 30px;\r\n    color: #000;\r\n    &:hover {\r\n        color: #979797;\r\n    }\r\n  }\r\n  .header .menu {\r\n    clear: none;\r\n    float: right;\r\n    max-height: none;\r\n  }\r\n  .header .menu-icon {\r\n    display: none;\r\n  }\r\n  ul li {\r\n        display: flex;\r\n    }\r\n}\r\n\r\n@media (max-width: 500px){\r\n    ul li {\r\n        display: block;\r\n        color: #000000;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\n`;\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction About(){\r\n    return(\r\n        <Style>\r\n            <div class=\"about\">\r\n                <h1>About</h1>\r\n                <p>A personal project created in React JS using the pokeapi for data.</p>\r\n            </div>\r\n            <div class=\"about\">\r\n                <h1>Disclamer</h1>\r\n                <p>This is not a licensed by Nintendo® or The Pokémon Company®, I am not affiliated with or sponsored by Nintendo® or The Pokémon Company®.</p>\r\n                <p>The images of the pokémon and other related indicia, as well as the Pokémon themselves, are copyright of Nintendo® and The Pokémon Company®.</p>\r\n            </div>\r\n        </Style>\r\n    );\r\n}\r\n\r\nconst Style = styled.div`\r\ndisplay: block;\r\njustify-content: center;\r\ntext-align: center;\r\nh1 {\r\n    text-transform: uppercase;\r\n}\r\n.about {\r\n    margin: 20px;\r\n}\r\n`;\r\n\r\nexport default About;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Home from './pages/home/Home';\r\nimport Header from './components/header/Header';\r\nimport About from './pages/about/About';\r\n\r\nfunction App() {\r\n  axios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Header/>\r\n      </Switch>\r\n      <Switch>\r\n        <Route type=\"all\" exact path='/pokedex/' component={Home} />\r\n        <Route type=\"all\" exact path='/pokedex/about' component={About} />\r\n        {/* <Route type=\"public\" exact path=\"/error403\" component={Error403} />\r\n        <Route type=\"public\" path=\"*\" component={Error404} /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n    GET_ALL_POKEMON_LOADING,\r\n    GET_ALL_POKEMON_SUCCESS,\r\n    GET_ALL_POKEMON_FAIL,\r\n    GET_MORE_POKEMON_LOADING,\r\n    GET_MORE_POKEMON_SUCCESS,\r\n    GET_MORE_POKEMON_FAIL,\r\n    GET_POKEMON_DETAILS_LOADING,\r\n    GET_POKEMON_DETAILS_SUCCESS,\r\n    GET_POKEMON_DETAILS_FAIL,\r\n} from \"store/actions/pokemonAction\";\r\n\r\nconst initState = {\r\n    getAll: {\r\n        isLoading: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        message: '',\r\n        status: '',\r\n        data: [],\r\n    },\r\n    getMore: {\r\n        isLoading: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        message: '',\r\n        status: '',\r\n        data: [],\r\n    },\r\n    getDetails: {\r\n        isLoading: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        message: '',\r\n        status: '',\r\n        data: [],\r\n    }\r\n}\r\n\r\nconst PokemonReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_POKEMON_LOADING: return {\r\n            ...state,\r\n            getAll: {\r\n                ...state.getAll,\r\n                isLoading: true,\r\n                isSuccess: false,\r\n                isError: false,\r\n                message: '',\r\n                status: '',\r\n                data: [],\r\n            }\r\n        }\r\n        case GET_ALL_POKEMON_SUCCESS: return {\r\n            ...state,\r\n            getAll: {\r\n                isLoading: false,\r\n                isSuccess: true,\r\n                isError: false,\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                data: action.payload.result,\r\n            }\r\n        }\r\n        case GET_ALL_POKEMON_FAIL: return {\r\n            ...state,\r\n            getAll: {\r\n                isLoading: false,\r\n                isSuccess: false,\r\n                isError: true,\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                data: action.payload.result,\r\n            }\r\n        }\r\n\r\n        case GET_MORE_POKEMON_LOADING: return {\r\n            ...state,\r\n            getMore: {\r\n                ...state.getAll,\r\n                isLoading: true,\r\n                isSuccess: false,\r\n                isError: false,\r\n                message: '',\r\n                status: '',\r\n                data: [],\r\n            }\r\n        }\r\n        case GET_MORE_POKEMON_SUCCESS: return {\r\n            ...state,\r\n            getMore: {\r\n                isLoading: false,\r\n                isSuccess: true,\r\n                isError: false,\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                data: action.payload.result,\r\n            }\r\n        }\r\n        case GET_MORE_POKEMON_FAIL: return {\r\n            ...state,\r\n            getMore: {\r\n                isLoading: false,\r\n                isSuccess: false,\r\n                isError: true,\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                data: action.payload.result,\r\n            }\r\n        }\r\n\r\n        case GET_POKEMON_DETAILS_LOADING: return {\r\n            ...state,\r\n            getDetails: {\r\n                ...state.getAll,\r\n                isLoading: true,\r\n                isSuccess: false,\r\n                isError: false,\r\n                message: '',\r\n                status: '',\r\n                data: [],\r\n            }\r\n        }\r\n        case GET_POKEMON_DETAILS_SUCCESS: return {\r\n            ...state,\r\n            getDetails: {\r\n                isLoading: false,\r\n                isSuccess: true,\r\n                isError: false,\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                data: action.payload.result,\r\n            }\r\n        }\r\n        case GET_POKEMON_DETAILS_FAIL: return {\r\n            ...state,\r\n            getDetails: {\r\n                isLoading: false,\r\n                isSuccess: false,\r\n                isError: true,\r\n                message: action.payload.message,\r\n                status: action.payload.status,\r\n                data: action.payload.result,\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default PokemonReducer;","import { combineReducers } from 'redux';\r\n\r\nimport pokemonReducer from 'store/reducers/pokemonReducer';\r\nconst rootReducer = combineReducers({\r\n  pokemonReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from 'App';\r\nimport * as serviceWorker from 'serviceWorker';\r\nimport store from 'store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <Router>\r\n          <App class=\"scrollbar\" id=\"style-1\" />\r\n      </Router>\r\n  </Provider>,\r\ndocument.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}